[33mcommit 87050e208e660ed3cf013fed61bad36a7671631c[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: topiaspe <topiaspe@metropolia.fi>
Date:   Sun Apr 3 17:04:18 2022 +0300

    exercise 4.6 helpers and unit tests

[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 636f8f2..dcff52a 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -3139,8 +3139,7 @@[m
     "lodash": {[m
       "version": "4.17.21",[m
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",[m
[31m-      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",[m
[31m-      "dev": true[m
[32m+[m[32m      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="[m
     },[m
     "lowercase-keys": {[m
       "version": "1.0.1",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 3074c6a..5136760 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -14,6 +14,7 @@[m
     "cors": "^2.8.5",[m
     "dotenv": "^16.0.0",[m
     "express": "^4.17.3",[m
[32m+[m[32m    "lodash": "^4.17.21",[m
     "mongoose": "^6.2.9"[m
   },[m
   "devDependencies": {[m
[1mdiff --git a/tests/mostBlogs.test.js b/tests/mostBlogs.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2bc98b6[m
[1m--- /dev/null[m
[1m+++ b/tests/mostBlogs.test.js[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32mconst listHelper = require('../utils/list_helper')[m
[32m+[m
[32m+[m[32mdescribe('most blogs', () => {[m
[32m+[m[32m    const blogs = [[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422a851b54a676234d17f7",[m
[32m+[m[32m          title: "React patterns",[m
[32m+[m[32m          author: "Michael Chan",[m
[32m+[m[32m          url: "https://reactpatterns.com/",[m
[32m+[m[32m          likes: 7,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422aa71b54a676234d17f8",[m
[32m+[m[32m          title: "Go To Statement Considered Harmful",[m
[32m+[m[32m          author: "Edsger W. Dijkstra",[m
[32m+[m[32m          url: "http://www.u.arizona.edu/~rubinson/copyright_violations/Go_To_Considered_Harmful.html",[m
[32m+[m[32m          likes: 5,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422b3a1b54a676234d17f9",[m
[32m+[m[32m          title: "Canonical string reduction",[m
[32m+[m[32m          author: "Edsger W. Dijkstra",[m
[32m+[m[32m          url: "http://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD808.html",[m
[32m+[m[32m          likes: 12,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422b891b54a676234d17fa",[m
[32m+[m[32m          title: "First class tests",[m
[32m+[m[32m          author: "Robert C. Martin",[m
[32m+[m[32m          url: "http://blog.cleancoder.com/uncle-bob/2017/05/05/TestDefinitions.htmll",[m
[32m+[m[32m          likes: 10,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422ba71b54a676234d17fb",[m
[32m+[m[32m          title: "TDD harms architecture",[m
[32m+[m[32m          author: "Robert C. Martin",[m
[32m+[m[32m          url: "http://blog.cleancoder.com/uncle-bob/2017/03/03/TDD-Harms-Architecture.html",[m
[32m+[m[32m          likes: 0,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          _id: "5a422bc61b54a676234d17fc",[m
[32m+[m[32m          title: "Type wars",[m
[32m+[m[32m          author: "Robert C. Martin",[m
[32m+[m[32m          url: "http://blog.cleancoder.com/uncle-bob/2016/05/01/TypeWars.html",[m
[32m+[m[32m          likes: 2,[m
[32m+[m[32m          __v: 0[m
[32m+[m[32m        }[m[41m  [m
[32m+[m[32m      ][m
[32m+[m
[32m+[m[32m      test('author with most blogs using empty list', () => {[m
[32m+[m[32m        const result = listHelper.mostBlogs([])[m
[32m+[m[32m        expect(result).toEqual(null)[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m    test('author with most blogs using multiple blogs', () => {[m
[32m+[m[32m        const result = listHelper.mostBlogs(blogs)[m
[32m+[m[32m        expect(result).toEqual({[m
[32m+[m[32m            author: "Robert C. Martin",[m
[32m+[m[32m            blogs: 3[m
[32m+[m[32m        })[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m    test('author with most blogs using multiple blogs and 2 authors with most blogs', () => {[m
[32m+[m[32m        const blogsWithTwoMostBloggingAuthors = blogs.concat({[m
[32m+[m[32m            _id: "5a422b3a1b54a676234d17f9",[m
[32m+[m[32m            title: "Canonical string reduction",[m
[32m+[m[32m            author: "Edsger W. Dijkstra",[m
[32m+[m[32m            url: "http://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD808.html",[m
[32m+[m[32m            likes: 12,[m
[32m+[m[32m            __v: 0[m
[32m+[m[32m          })[m
[32m+[m[32m        const result = listHelper.mostBlogs(blogsWithTwoMostBloggingAuthors)[m
[32m+[m[32m        expect(result).toEqual(expect.objectContaining({[m
[32m+[m[32m            author: expect.any(String),[m
[32m+[m[32m            blogs: 3[m
[32m+[m[32m        }))[m
[32m+[m[32m    })[m
[32m+[m[32m})[m
\ No newline at end of file[m
[1mdiff --git a/utils/list_helper.js b/utils/list_helper.js[m
[1mindex 373d4a1..ab03fe7 100644[m
[1m--- a/utils/list_helper.js[m
[1m+++ b/utils/list_helper.js[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mconst _ = require('lodash');[m
[32m+[m
 const dummy = (blogs) => {[m
   return 1;[m
 }[m
[36m@@ -25,8 +27,25 @@[m [mconst favoriteBlog = (blogs) => {[m
 [m
 }[m
 [m
[32m+[m[32mconst mostBlogs = (blogs) => {[m
[32m+[m[32m    if (blogs.length === 0) {[m
[32m+[m[32m        return null[m
[32m+[m[32m    }[m
[32m+[m[32m    const blogWriters = _.map(blogs, 'author')[m
[32m+[m[32m    const writerWithMostBlogsArray = _(blogWriters)[m
[32m+[m[32m    .countBy()[m
[32m+[m[32m    .entries()[m
[32m+[m[32m    .maxBy(_.last)[m
[32m+[m[32m    const writerObject = {[m
[32m+[m[32m        author: writerWithMostBlogsArray[0],[m
[32m+[m[32m        blogs: writerWithMostBlogsArray[1][m
[32m+[m[32m    }[m
[32m+[m[32m    return writerObject[m
[32m+[m[32m}[m
[32m+[m
 module.exports = {[m
   dummy,[m
   totalLikes,[m
[31m-  favoriteBlog[m
[32m+[m[32m  favoriteBlog,[m
[32m+[m[32m  mostBlogs[m
 }[m
